syntax = "proto3";
package ETModel;

//向realm用户发送上线消息
message A0004_PlayerOnline_G2R // IMessage
{
	int32 RpcId = 90;
	int64 UserID = 1;
	int32 GateAppID = 2;
}
//向realm用户发送下线消息
message A0005_PlayerOffline_G2R // IMessage
{
	int32 RpcId = 90;
	int64 UserID = 1;
}
// 从Gate获取登录Key请求
message A0006_GetLoginKey_R2G // IRequest
{
	int32 RpcId = 90;
	int64 UserID = 1;
}
// 从Gate获取登录Key响应
message A0006_GetLoginKey_G2R // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 GateLoginKey = 1;
}
//向Gate发出踢出玩家请求
message	A0007_KickOutPlayer_R2G // IRequest
{
	int32 RpcId = 90;
	int64 UserID = 1;
}
//向realm返回踢出玩家响应
message	A0007_KickOutPlayer_G2R // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}
//Gate通知Map玩家离开房间
message Actor_PlayerExitRoom_G2M // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 94;
}
//==>匹配玩家并进入斗地主游戏房间 -------------------------------------
//Map通知Gate匹配成功
message Actor_MatchSucess_M2G // IActorMessage
{
	int64 ActorId = 94;
	int64 GamerID = 1;
}

//Gate通知Map 玩家请求匹配
message EnterMatchs_G2M // IMessage
{
	int32 RpcId = 90;
	int64 UserID = 1; //Gate上User的UserID
	int64 GActorID = 2; //Gate上User的InstanceId
	int64 CActorID = 3; //Gate上User的GateSessionID
}
//匹配玩家并进入斗地主游戏房间 <== -------------------------------------
//ET----------------------------------------------
message M2M_TrasferUnitRequest // IRequest
{
	int32 RpcId = 90;
	Unit Unit = 1;
}

message M2M_TrasferUnitResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	int64 InstanceId = 1;
}

message M2A_Reload // IRequest
{
	int32 RpcId = 90;
}

message A2M_Reload // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message G2G_LockRequest // IRequest
{
	int32 RpcId = 90;
	int64 Id = 1;
	string Address = 2;
}

message G2G_LockResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message G2G_LockReleaseRequest // IRequest
{
	int32 RpcId = 90;
	int64 Id = 1;
	string Address = 2;
}

message G2G_LockReleaseResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message DBSaveRequest // IRequest
{
	int32 RpcId = 90;
	bool NeedCache = false;
	string CollectionName = 1;
	ComponentWithId Component = 2;
}


message DBSaveBatchResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message DBSaveBatchRequest // IRequest
{
	int32 RpcId = 90;
	bool NeedCache = false;
	string CollectionName = 1;
	repeated ComponentWithId Components = 2;
}

message DBSaveResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message DBQueryRequest // IRequest
{
	int32 RpcId = 90;
	int64 Id = 1;
	bool NeedCache = false;
	string CollectionName = 2;
}

message DBQueryResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	ComponentWithId Component = 1;
}

message DBQueryBatchRequest // IRequest
{
	int32 RpcId = 90;
	bool NeedCache = false;
	string CollectionName = 1;
	repeated int64 IdList = 2;
}

message DBQueryBatchResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	repeated ComponentWithId Components = 1;
}

message DBQueryJsonRequest // IRequest
{
	int32 RpcId = 90;
	string CollectionName = 1;
	string Json = 2;
}

message DBQueryJsonResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	repeated ComponentWithId Components = 1;
}

message ObjectAddRequest // IRequest
{
	int32 RpcId = 90;
	int64 Key = 1;
	int64 InstanceId = 2;
}

message ObjectAddResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message ObjectRemoveRequest // IRequest
{
	int32 RpcId = 90;
	int64 Key = 1;
}

message ObjectRemoveResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message ObjectLockRequest // IRequest
{
	int32 RpcId = 90;
	int64 Key = 1;
	int64 InstanceId = 2;
	int Time = 3;
}

message ObjectLockResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message ObjectUnLockRequest // IRequest
{
	int32 RpcId = 90;
	int64 Key = 1;
	int64 OldInstanceId = 2;
	int64 InstanceId = 3;
}

message ObjectUnLockResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message ObjectGetRequest // IRequest
{
	int32 RpcId = 90;
	int64 Key = 1;
}

message ObjectGetResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	int64 InstanceId = 1;
}

message R2G_GetLoginKey // IRequest
{
	int32 RpcId = 90;
	string Account = 1;
}

message G2R_GetLoginKey // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	int64 Key = 1;
}

message G2M_CreateUnit // IRequest
{
	int32 RpcId = 90;
	int64 PlayerId = 1;
	int64 GateSessionId = 2;
}

message M2G_CreateUnit // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	// 自己的unit id
	int64 UnitId = 1;
	// 所有的unit
	repeated UnitInfo Units = 2;
}

message G2M_SessionDisconnect // IActorLocationMessage
{
	int32 RpcId = 90;
	long ActorId = 94;
}